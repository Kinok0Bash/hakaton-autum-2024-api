name: Hackathon Autumn 2024

on:
  pull_request:
    types:
      - closed
    branches:
      - master

env:
  JAVA_VERSION: '21'  # Выносим версию Java в глобальные переменные
  TARGET_DIR: /home/kinoko/hackaton/api  # Упрощаем использование переменной

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: adopt
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-jars
          path: "**/build/libs/*.jar"  # Собираем все JAR из модулей

  deploy:
    runs-on: self-hosted
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Stop and remove existing containers
        run: |
          if [ -f "${{ env.TARGET_DIR }}/docker-compose.yml" ]; then
            docker compose -f "${{ env.TARGET_DIR }}/docker-compose.yml" down
          fi

      - name: Clean target directory
        run: sudo rm -rf ${{ env.TARGET_DIR }} && sudo mkdir -p ${{ env.TARGET_DIR }}

      - name: Copy project files
        run: |
          sudo cp -r ./* ${{ env.TARGET_DIR }}
          sudo chown -R kinoko:kinoko ${{ env.TARGET_DIR }}

      - name: Download built JARs
        uses: actions/download-artifact@v4
        with:
          name: app-jars
          path: /tmp/hack

      - name: Copy JAR to server
        run: |
          sudo cp -r /tmp/hack/* ${{ env.TARGET_DIR }}
          sudo rm -r /tmp/hack

      - name: Build and deploy with Docker Compose
        run: |
          docker compose -f ${{ env.TARGET_DIR }}/docker-compose.yml up --build -d

      - name: Confirm deployment
        run: echo "Deployment completed successfully"